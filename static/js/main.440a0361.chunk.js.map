{"version":3,"sources":["redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/showPopup.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","components/Categories.jsx","redux/actions/filters.js","assets/img/pizza-logo.svg","components/HeaderButton.jsx","components/Header.jsx","components/SortPopup.jsx","components/Sort.jsx","redux/actions/cart.js","components/PizzaBlock.jsx","components/ClearPopup.jsx","components/RemovePopup.jsx","components/CartItem.jsx","components/Loader.jsx","components/AddNotification.jsx","redux/actions/pizzas.js","pages/Home.jsx","assets/img/empty-cart.png","pages/Cart.jsx","App.js","index.js"],"names":["initialState","category","sortBy","orderSort","sortSelect","filters","state","action","type","payload","items","isLoaded","pizzas","isShowPopup","showPopup","notification","itemsForNotification","totalPrice","totalCount","showClearPopup","showDeletePopup","idForDelete","cart","newItems","dataForKey","Date","now","toString","allPizzas","length","reduce","sum","obj","calcedPrice","filtreditem","filter","item","clientId","newItemsNotif","slice","filtredNotifItems","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","Categories","memo","useState","activeItem","setActiveItem","dispatch","useDispatch","onSetCategory","useCallback","i","elem","map","name","listClassName","className","onClick","index","Button","useSelector","xlinkHref","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Header","to","src","logo","alt","HeaderButton","SortPopup","changeSortText","onKeyPressed","onSetSortType","onSetOrderSort","order","setOrderSort","onSetSortSelectList","boolean","lists","list","onSelectSort","tabIndex","onKeyDown","Sort","sortText","setSortText","setShowPopup","useEffect","document","querySelector","addEventListener","e","target","matches","key","listItem","clearCart","PizzaBlock","imageUrl","types","price","sizes","id","availabaleTypes","availabaleSizes","activeType","setActiveType","includes","activeSize","setActiveSize","setPrice","typeForCart","sizeForCart","onAddPizzaToCart","addedPizzaObj","smallObj","Math","random","TypeClassName","onSelectType","size","SizeClassName","onSelectSize","onCalcPriceBySize","ClearPopup","onClearShowPopup","RemovePopup","onDeleteShowPopup","onRemovePizzaFromCart","CartItem","onSetIdForDelete","onHandleShowDeletePopup","Loader","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","AddNotification","hover","setHover","onMouseEnter","onMouseLeave","setPizzas","categoryesName","arrKeys","Home","notif","apiUrl","categoryUrl","sortUrl","fetch","then","resp","ok","Error","status","json","data","fetchPizzas","numKey","Cart","cartEmptyImage","App","display","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.440a0361.chunk.js","sourcesContent":["const initialState = {\n    category: 0,\n    sortBy: 'rating',\n    orderSort: 'asc',\n    sortSelect: false\n}\nconst filters = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_SORT_BY':\n            return {\n                ...state,\n                sortBy: action.payload\n            }\n        case 'SET_CATEGORY':\n            return {\n                ...state,\n                category: action.payload\n            }\n        case 'SET_ORDER_SORT':\n            return {\n                ...state,\n                orderSort: action.payload\n            }\n        case 'SET_SELECT_LIST':\n            return {\n                ...state,\n                sortSelect: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default filters;","const initialState = {\n    items: [],\n    isLoaded: false\n\n}\nconst pizzas = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_PIZZAS':\n            return {\n                ...state,\n                items: action.payload,\n                isLoaded: true\n            }\n        case 'SET_LOADED':\n            return {\n                ...state,\n                isLoaded: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default pizzas;","const initialState = {\n    isShowPopup: false\n\n}\nconst showPopup = (state = initialState, action) => {\n    if (action.type === 'SET_SHOW_POPUP') {\n        return {\n            ...state,\n            isShowPopup: action.payload\n        }\n    }\n    return state;\n\n}\n\nexport default showPopup;","const initialState = {\n    items: [],\n    notification: false,\n    itemsForNotification: [],\n    totalPrice: 0,\n    totalCount: 0,\n    showClearPopup: false,\n    showDeletePopup: false,\n    idForDelete: null\n}\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_PIZZA_CART':\n\n            const newItems = [\n                ...state.items,\n                action.payload = {\n                    ...action.payload,\n                    dataForKey: Date.now().toString(16)\n                }\n            ];\n\n            const allPizzas = newItems.length;\n            const totalPrice = newItems.reduce((sum, obj) => sum + obj.calcedPrice, 0);\n\n            return {\n                ...state,\n                items: newItems,\n                totalCount: allPizzas,\n                totalPrice: totalPrice,\n            };\n        case 'REMOVE_PIZZA_CART': {\n            const filtreditem = state.items.filter((item) => item.clientId !== action.payload.clientId);\n\n            const allPizzas = filtreditem.length;\n            const totalPrice = filtreditem.reduce((sum, obj) => sum + obj.calcedPrice, 0);\n\n            return {\n                ...state,\n                items: filtreditem,\n                totalCount: allPizzas,\n                totalPrice: totalPrice,\n            };\n\n        }\n        case 'CLEAR_CART': {\n            return {\n                items: [],\n                notification: false,\n                itemsForNotification: [],\n                totalCount: 0,\n                totalPrice: 0,\n            };\n        }\n        case 'SET_NOTIFICATION_ITEMS': {\n            const length = state.itemsForNotification.length\n            const newItemsNotif = length > 1\n                ? state.itemsForNotification.slice(1, length)\n                : state.itemsForNotification;\n            return {\n                ...state,\n                itemsForNotification: [\n                    ...newItemsNotif,\n                    action.payload = {\n                        ...action.payload,\n                    },\n                ]\n            };\n        }\n        case 'DELETE_NOTIFICATION_ITEM': {\n\n            const filtredNotifItems = state.itemsForNotification.filter((item) => item.clientId !== action.payload);\n\n            return {\n                ...state,\n                itemsForNotification: filtredNotifItems\n            };\n        }\n        case 'CLEAR_NOTIFICATION_ITEMS': {\n            return {\n                ...state,\n                itemsForNotification: []\n            };\n        }\n        case 'SET_SHOW_CLEAR_POPUP': {\n            return {\n                ...state,\n                showClearPopup: action.payload,\n            };\n        }\n        case 'SET_SHOW_DELETE_POPUP': {\n            return {\n                ...state,\n                showDeletePopup: action.payload,\n            };\n        }\n        case 'SET_ID_FOR_DELETE': {\n            return {\n                ...state,\n                idForDelete: action.payload,\n            };\n        }\n\n\n        default:\n            return state;\n    }\n}\n\nexport default cart;","import { combineReducers } from 'redux';\nimport filters from './filters'\nimport pizzas from './pizzas'\nimport showPopup from './showPopup'\nimport cart from './cart'\n\nconst rootReducer = combineReducers({\n    filters,\n    pizzas,\n    showPopup,\n    cart\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\n//compose объект импортируется из редакса для того,\n//что бы использовать можества мидолваров-вспомогательных фич.\n//Синтаксис const composeEnchancer = < MiddleWare > || compose\n//Все дополнительные миддл вары компонуются в функцию Енчансер\n//И вызывается вторым параметром в креат сторе\n//Импортируем applayMidlleware из редакса и передаем его в качестве параметра в Енчасер для того,\n//что бы привязать определенный миддлвар для вызова на каждом акшоне\n\nconst store = createStore(\n    rootReducer,\n    // composeEnchancer()\n    applyMiddleware(thunk)\n);\n\nexport default store;","import React, { memo, useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setCategory } from '../redux/actions/filters';\n\nconst Categories = memo(function Categories({ items }) {\n    const [activeItem, setActiveItem] = useState(0);\n\n    const dispatch = useDispatch();\n\n    const onSetCategory = useCallback((i) => {\n        dispatch(setCategory(i));\n    }, [dispatch]);\n\n    const onSelectItem = index => {\n        setActiveItem(index);\n        onSetCategory(index);\n    };\n\n    // console.log('RENDER CATEGORY');\n\n    const elem = items.map((name, i) => {\n        const listClassName = activeItem === i ? 'active' : 0;\n\n        return <li\n            className={listClassName}\n            onClick={() => onSelectItem(i)}\n            key={name} > {name}</li >\n    })\n\n    return (\n        <div className=\"categories\">\n            <ul>\n                {elem}\n            </ul>\n        </div>\n    )\n})\n\nexport default Categories;\n\n// import React, { Component } from 'react';\n\n// class Categories extends Component {\n\n//     state = {\n//         activeItem: 0\n//     }\n\n//     onSelectItem = (index) => {\n//         this.setState({\n//             activeItem: index\n//         })\n//     }\n\n//     render() {\n//         const { items, outputName } = this.props;\n//         // Мапим количество листов в зависимости от массива пришедшего от просов\n//         const element = items.map((name, i) => {\n//             // Записываем класс в зависимости от стейта\n//             const listClassName = this.state.activeItem === i ? 'active' : null;\n//             return <li\n//                 className={listClassName}\n//                 onClick={() => {\n//                     this.onSelectItem(i)\n//                     outputName(name)\n//                 }}\n//                 key={name}>{name}\n//             </li>\n//         })\n\n//         return (\n//             <div className=\"categories\">\n//                 <ul>\n//                     {element}\n//                 </ul>\n//             </div>\n//         )\n//     }\n\n// }\n\n\n// export default Categories;\n","const setSortBy = (sortType) => ({\n    type: 'SET_SORT_BY',\n    payload: sortType\n});\n\nconst setCategory = (index) => ({\n    type: 'SET_CATEGORY',\n    payload: index\n});\n\nconst setOrderSort = (order) => ({\n    type: 'SET_ORDER_SORT',\n    payload: order\n});\n\nconst setSortSelectList = (x) => ({\n    type: 'SET_SELECT_LIST',\n    payload: x\n});\n\n\nexport {\n    setSortBy,\n    setCategory,\n    setOrderSort,\n    setSortSelectList\n}","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from \"react\";\n\nimport { useSelector } from 'react-redux';\n\n\nfunction Button() {\n\n    const { totalPrice, totalCount } = useSelector(({ cart }) => {\n        return {\n            totalPrice: cart.totalPrice,\n            totalCount: cart.totalCount,\n        }\n    });\n    // const buttonClassName = outline === 'false' ? 'button button--outline' : 'button';\n    return (\n        <div className=\"button button--cart\">\n            <span>{totalPrice}<svg className=\"ruble-svg--cart\"><use xlinkHref=\"#ruble\" /></svg></span>\n            <div className=\"button__delimiter\"></div>\n            <svg\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 18 18\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                />\n                <path\n                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                />\n                <path\n                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                />\n            </svg>\n            <span>{totalCount}</span>\n        </div>\n    );\n}\n\nexport default Button;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/img/pizza-logo.svg';\nimport HeaderButton from \"./HeaderButton\";\n\nfunction Header() {\n\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <div className=\"header__body\">\n                    <Link to=\"/\" className=\"header__logo\">\n                        <img width=\"38\" src={logo} alt=\"Pizza logo\" />\n                        <div>\n                            <h1>React Pizza</h1>\n                            <p>самая вкусная пицца во вселенной</p>\n                        </div>\n                    </Link>\n                    <Link to=\"/cart\" className=\"header__cart\">\n                        <HeaderButton />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React, { memo, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSortBy, setOrderSort, setSortSelectList } from '../redux/actions/filters';\n\nconst SortPopup = memo(function SortPopup({ items, changeSortText, onKeyPressed, showPopup }) {\n\n    const { sortSelect } = useSelector(({ filters }) => filters);\n\n    const [activeItem, setActiveItem] = useState(0);\n\n    const dispatch = useDispatch();\n\n    const onSetSortType = useCallback((type) => {\n        dispatch(setSortBy(type))\n    }, [dispatch]);\n\n    const onSetOrderSort = useCallback((order) => {\n        dispatch(setOrderSort(order))\n    }, [dispatch]);\n\n    const onSetSortSelectList = useCallback((boolean) => {\n        dispatch(setSortSelectList(boolean))\n    }, [dispatch]);\n\n    const onSelectSort = (i, type) => {\n        setActiveItem(i);\n        onSetSortType(type);\n        onSetSortSelectList(!sortSelect);\n        if (sortSelect) {\n            onSetOrderSort('asc');\n        } else {\n            onSetOrderSort('desc');\n        }\n\n        // onClosePopup();\n    }\n\n    const lists = items.map((list, i) => {\n        const { name, type } = list\n        let listClassName = 'sort__list-item';\n        listClassName += activeItem === i ? ' active' : '';\n\n        return (\n            <li\n                onClick={() => {\n                    onSelectSort(i, type);\n                    changeSortText(name);\n                }}\n                key={name}\n                className={listClassName}>\n                {name}\n            </li>\n        )\n    })\n\n    return (\n        <div\n            tabIndex='-1'\n            onKeyDown={onKeyPressed}\n            className={showPopup === true ? \"sort__popup active\" : \"sort__popup\"}>\n            <ul>\n                {lists}\n            </ul>\n        </div>\n    );\n})\n\nexport default SortPopup;\n\n\n\n\n// import React, { Component } from 'react';\n\n// class SortPopup extends Component {\n//     state = {\n//         items: [\n//             'популярности',\n//             'цене',\n//             'алфавиту',\n//         ],\n//         activeItem: 0\n//     }\n\n//     onSelectSort = (inx) => {\n//         this.setState({\n//             activeItem: inx,\n//         })\n//     }\n\n\n//     render() {\n//         const { items, activeItem } = this.state;\n\n//         const lists = items.map((list, i) => {\n//             const listClassName = activeItem === i ? 'active' : null;\n//             return (\n//                 <li\n//                     onClick={() => this.onSelectSort(i)}\n//                     key={Math.random() * 10}\n//                     className={listClassName}>{list}</li>\n//             )\n//         })\n//         return (\n//             <div className=\"sort__popup\">\n//                 <ul>\n//                     {lists}\n//                 </ul>\n//             </div>\n//         );\n//     }\n// }\n\n// export default SortPopup;","import React, { useState, useEffect } from 'react';\nimport SortPopup from './SortPopup';\n\nimport { useSelector } from 'react-redux';\n// import showPopup from '../redux/actions/showPopup';\n\n\nfunction Sort() {\n    const { orderSort } = useSelector(({ filters }) => {\n        return {\n            orderSort: filters.orderSort,\n        }\n    });\n\n    const sortItems = [\n        { name: 'популярности', type: 'rating' },\n        { name: 'цене', type: 'price' },\n        { name: 'алфавиту', type: 'name' },\n    ];\n\n    const [sortText, setSortText] = useState('популярности');\n    const [showPopup, setShowPopup] = useState(false);\n\n    const onSelectPopup = () => {\n        setShowPopup(!showPopup);\n    }\n\n    const onClosePopup = () => {\n        setShowPopup(false);\n    }\n\n\n    useEffect(() => {\n        document.querySelector('.outside').addEventListener('click', (e) => {\n            if (!e.target.matches('.sort__list-item') && !e.target.matches('.sort__name')) {\n                onClosePopup();\n            }\n        });\n    }, []);\n\n\n    const onKeyPressed = (e) => {\n        if (e.key === 'Escape') {\n            setShowPopup(false);\n        }\n    }\n\n    const changeSortText = (listItem) => {\n        setSortText(listItem);\n    }\n\n    return (\n        <div className=\"sort\">\n            <div className=\"sort__label\">\n                <svg\n                    className={orderSort === 'desc' ? '' : 'active'}\n                    width=\"10\"\n                    height=\"6\"\n                    viewBox=\"0 0 10 6\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                        fill=\"#2C2C2C\"\n                    />\n                </svg>\n                <b>Сортировка по:</b>\n                <span\n                    tabIndex=\"-1\"\n                    onKeyDown={onKeyPressed}\n                    className=\"sort__name\"\n                    onClick={() => onSelectPopup()}>{sortText}</span>\n            </div>\n            <SortPopup\n                showPopup={showPopup}\n                onKeyPressed={onKeyPressed}\n                changeSortText={changeSortText}\n                // onClosePopup={onClosePopup}\n                items={sortItems} />\n        </div>\n    )\n}\n\nexport default Sort;\n","const addPizzaToCart = (addedPizzaObj) => ({\n    type: 'ADD_PIZZA_CART',\n    payload: {\n        ...addedPizzaObj,\n        clientId: (Math.random() * 100)\n    }\n})\n\nconst removePizzaFromCart = (pizzaObj) => ({\n    type: 'REMOVE_PIZZA_CART',\n    payload: pizzaObj\n})\n\nconst clearCart = () => ({\n    type: 'CLEAR_CART'\n})\n\nconst deleteNotificationItem = (idForDeleteNotifItem) => ({\n    type: 'DELETE_NOTIFICATION_ITEM',\n    payload: idForDeleteNotifItem\n})\nconst setNotificationItems = (smallObj) => ({\n    type: 'SET_NOTIFICATION_ITEMS',\n    payload: {\n        ...smallObj,\n        clientId: (Math.random() * 100)\n    }\n})\n\nconst setShowClearPopup = (clearBoolean) => ({\n    type: 'SET_SHOW_CLEAR_POPUP',\n    payload: clearBoolean\n})\nconst setShowDeletePopup = (deleteBoolean) => ({\n    type: 'SET_SHOW_DELETE_POPUP',\n    payload: deleteBoolean\n})\n\nconst setIdForDelete = (objIdFordelete) => ({\n    type: 'SET_ID_FOR_DELETE',\n    payload: objIdFordelete\n})\n\nconst onClearNotificationItems = () => ({\n    type: 'CLEAR_NOTIFICATION_ITEMS'\n})\n\n\nexport {\n    addPizzaToCart,\n    removePizzaFromCart,\n    clearCart,\n    deleteNotificationItem,\n    setNotificationItems,\n    setShowClearPopup,\n    setShowDeletePopup,\n    setIdForDelete,\n    onClearNotificationItems\n}","import React, { useState } from 'react';\nimport { addPizzaToCart, setNotificationItems } from '../redux/actions/cart';\nimport { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\n\nfunction PizzaBlock({ imageUrl, name, types, price, sizes, id }) {\n    const dispatch = useDispatch();\n\n    const availabaleTypes = ['тонкое', 'традиционное'];\n    const availabaleSizes = [26, 30, 40];\n\n    const [activeType, setActiveType] = useState(types[0]);\n    const [activeSize, setActiveSize] = useState(!sizes.includes(availabaleSizes[0]) ? 1 : 0);\n    const [calcedPrice, setPrice] = useState(price);\n\n    const typeForCart = availabaleTypes[activeType];\n    const sizeForCart = availabaleSizes[activeSize];\n\n    const onSelectType = (i, type) => {\n        setActiveType(i);\n        setActiveSize(0);\n        if (type === 'традиционное') {\n            setPrice(price + 18)\n        } else {\n            setPrice(price)\n        }\n    }\n\n    const onSelectSize = (i) => {\n        setActiveSize(i);\n    }\n\n    const onAddPizzaToCart = ({ ...obj }) => {\n        const { name, typeForCart, sizeForCart } = obj;\n        dispatch(addPizzaToCart(obj));\n        dispatch(setNotificationItems({ name, typeForCart, sizeForCart }));\n    }\n\n\n    const onCalcPriceBySize = (size) => {\n        setPrice(price);\n        if (activeType === 0) {\n            switch (size) {\n                case 26:\n                    setPrice(price)\n                    break;\n                case 30:\n                    setPrice(price + 21)\n                    break;\n                case 40:\n                    setPrice(price + 29)\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            switch (size) {\n                case 26:\n                    setPrice(price + 18)\n                    break;\n                case 30:\n                    setPrice(price + 37)\n                    break;\n                case 40:\n                    setPrice(price + 48)\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n\n\n    return (\n        <div\n            className='pizza-block'\n            key={id}>\n            <img\n                className=\"pizza-block__image\"\n                src={imageUrl}\n                alt={name}\n            />\n            <h4 className=\"pizza-block__title\">{name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {availabaleTypes.map((type, i) => {\n                        let TypeClassName = !types.includes(i) ? 'disabled' : '';\n                        TypeClassName += activeType === i ? ' active' : '';\n                        return (\n                            <li\n                                key={id + type}\n                                onClick={() => {\n                                    onSelectType(i, type);\n                                }}\n                                className={TypeClassName} > {type}</li >\n                        )\n                    })}\n                </ul>\n                <ul>\n                    {availabaleSizes.map((size, i) => {\n                        let SizeClassName = !sizes.includes(size) ? 'disabled' : '';\n                        SizeClassName += activeSize === i && SizeClassName !== 'disabled' ? ' active' : '';\n                        return (\n                            <li\n                                key={id + size}\n                                onClick={() => {\n                                    onSelectSize(i);\n                                    onCalcPriceBySize(size);\n                                }}\n                                className={SizeClassName} >{size} см</li >\n                        )\n                    })}\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">\n                    {calcedPrice}\n                    <svg className=\"ruble-svg\"><use xlinkHref=\"#ruble\" /></svg>\n                </div>\n                <button\n                    onClick={() => {\n                        onAddPizzaToCart({\n                            id,\n                            name,\n                            imageUrl,\n                            calcedPrice,\n                            typeForCart,\n                            sizeForCart\n                        });\n                    }}\n                    className=\"button button--outline button--add\">\n                    <svg\n                        width=\"12\"\n                        height=\"12\"\n                        viewBox=\"0 0 12 12\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                            fill=\"white\"\n                        />\n                    </svg>\n                    <span>Добавить</span>\n                </button>\n            </div>\n\n        </div >\n    );\n}\n\n// PizzaBlock.propTypes = {\n//     name: PropTypes.string.isRequired,\n// }\n\nexport default PizzaBlock;\n\n// {isLoaded ? pizzaItems :  />)}\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction ClearPopup({ clearCart, onClearShowPopup }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClearCart = () => {\r\n        dispatch(clearCart())\r\n    }\r\n    return (\r\n        <div className=\"popup__body\">\r\n            <span className=\"popup__text\">Вы действительно хотите очистить Корзину?</span>\r\n            <div className=\"popup__buttons\">\r\n                <button onClick={onClearShowPopup} className=\"button\">Нет</button>\r\n                <button onClick={onClearCart} className=\"button\">Да</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClearPopup\r\n","import React from 'react'\r\n\r\nfunction RemovePopup({ onDeleteShowPopup, onRemovePizzaFromCart }) {\r\n\r\n    const onSuccessDeletePizza = () => {\r\n        onDeleteShowPopup();\r\n        onRemovePizzaFromCart();\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup__body\">\r\n            <span className=\"popup__text\">Вы действительно хотите удалить Пиццу?</span>\r\n            <div className=\"popup__buttons\">\r\n                <button onClick={onDeleteShowPopup} className=\"button\">Нет</button>\r\n                <button onClick={onSuccessDeletePizza} className=\"button\">Да</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RemovePopup\r\n","import React from 'react';\n// import { removePizzaFromCart } from '../redux/actions/cart';\n// import { useDispatch } from 'react-redux';\n\nfunction CartItem({\n    clientId,\n    name,\n    imageUrl,\n    calcedPrice,\n    sizeForCart,\n    typeForCart,\n    onDeleteShowPopup,\n    onSetIdForDelete }) {\n\n\n    const onHandleShowDeletePopup = ({ ...obj }) => {\n        onDeleteShowPopup();\n        onSetIdForDelete(obj);\n    }\n\n    return (\n        <div className=\"cart__item\">\n            <div className=\"cart__item-img\">\n                <img\n                    className=\"pizza-block__image\"\n                    src={imageUrl}\n                    alt={name}\n                />\n            </div>\n            <div className=\"cart__item-info\">\n                <h3>{name}</h3>\n                <p>{typeForCart}, {sizeForCart} см.</p>\n            </div>\n            <div className=\"cart__item-price\">\n                <b>{calcedPrice}<svg className=\"ruble-svg\"><use xlinkHref=\"#ruble\" /></svg></b>\n            </div>\n            <div className=\"cart__item-remove\">\n                <button\n                    onClick={() => onHandleShowDeletePopup({ clientId })}\n                    className=\"button button--outline button--circle\">\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\n                    </svg>\n                </button>\n            </div>\n        </div >\n    )\n}\n\nexport default CartItem\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst Loader = () => (\n    <ContentLoader\n        className=\"pizza-block\"\n        speed={2}\n        width={280}\n        height={460}\n        viewBox=\"0 0 280 460\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\">\n        <circle cx=\"132\" cy=\"142\" r=\"115\" />\n        <rect x=\"0\" y=\"273\" rx=\"6\" ry=\"6\" width=\"280\" height=\"26\" />\n        <rect x=\"0\" y=\"310\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\n        <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"91\" height=\"31\" />\n        <rect x=\"137\" y=\"408\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\n    </ContentLoader>\n)\n\nexport default Loader;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteNotificationItem } from '../redux/actions/cart';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nfunction AddNotification({ clientId, name, sizeForCart, typeForCart }) {\r\n\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onDeleteNotifItem = () => {\r\n        dispatch(deleteNotificationItem(clientId));\r\n    }\r\n\r\n    const onEnterHover = () => {\r\n        setHover(true)\r\n    }\r\n    const onLeaveHover = () => {\r\n        setHover(false)\r\n    }\r\n\r\n    let className = \"notification__item-remove\";\r\n    className += hover ? \" active\" : \"\";\r\n\r\n    return (\r\n\r\n        <li\r\n            onMouseEnter={onEnterHover}\r\n            onMouseLeave={onLeaveHover}\r\n            className=\"notification__list-item\">\r\n            <Link to=\"/cart\">\r\n                <div className=\"notification__box\">\r\n                    <span>Добавлено в корзину:</span>\r\n                    <span className=\"notification__name\">{name},</span>\r\n                    <span className=\"notification__type\">{typeForCart},</span>\r\n                    <span className=\"notification__size\">{sizeForCart} см</span>\r\n                </div>\r\n            </Link>\r\n            <div className={className}>\r\n                <button\r\n                    onClick={onDeleteNotifItem}\r\n                    className=\"button button--outline button--circle\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\r\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nexport default AddNotification\r\n","const setLoaded = (payload) => ({\n    type: 'SET_LOADED',\n    payload\n})\n\n\nconst fetchPizzas = (category, sortBy, orderSort) => dispatch => {\n    const apiUrl = 'https://my-json-server.typicode.com/VladBondIt/FakeDBjson/pizzas';\n    const categoryUrl = `?category=${category - 1}`;\n    const sortUrl = `&_sort=${sortBy}&_order=${orderSort}`;\n\n    dispatch(setLoaded(false))\n    // Можно передать диспатч в качестве агрумента\n    fetch(`${apiUrl}${category === 0 ? '?' : categoryUrl}${sortUrl}`)\n        .then((resp) => {\n            if (!resp.ok) {\n                throw new Error(`Could not fetch ${apiUrl}` +\n                    `, received ${resp.status}`);\n            }\n            return resp.json();\n        })\n        .then((data) => {\n            dispatch(setPizzas(data));\n        })\n}\n\n\nconst setPizzas = (items) => ({\n    type: 'SET_PIZZAS',\n    payload: items\n});\n\nexport {\n    fetchPizzas\n};","import React, { useEffect } from 'react';\nimport { Categories, Sort, PizzaBlock, AddNotification, Loader } from '../components';\nimport { fetchPizzas } from '../redux/actions/pizzas';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onClearNotificationItems } from '../redux/actions/cart';\n\nconst categoryesName = ['Все', 'Мясные', 'Вегетарианские', 'Гриль', 'Острые', 'Закрытые'];\nconst arrKeys = [1, 2, 3, 4]\n\nfunction Home() {\n    const { items, isLoaded, category, sortBy, orderSort, notif } = useSelector(({ pizzas, filters, cart }) => {\n        return {\n            items: pizzas.items,\n            isLoaded: pizzas.isLoaded,\n            category: filters.category,\n            sortBy: filters.sortBy,\n            orderSort: filters.orderSort,\n            notif: cart.itemsForNotification,\n        }\n    });\n\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchPizzas(category, sortBy, orderSort))\n        dispatch(onClearNotificationItems());\n    }, [dispatch, category, sortBy, orderSort])\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"content__top\">\n                <Categories items={categoryesName} />\n                <Sort />\n            </div>\n\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {isLoaded\n                    ? items.map((item) =>\n                        <PizzaBlock\n                            key={item.id}\n                            {...item} />)\n                    : arrKeys.map(numKey => <Loader key={numKey} />)}\n\n            </div>\n            <ul className=\"notification\">\n                {notif.length === 0 ? '' : notif.map((obj) => <AddNotification key={obj.clientId} {...obj} />)}\n            </ul>\n        </div>\n    )\n}\n\nexport default Home;\n\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react';\nimport { CartItem, ClearPopup, RemovePopup } from '../components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearCart, setShowClearPopup, setShowDeletePopup, removePizzaFromCart, setIdForDelete } from '../redux/actions/cart';\n\nimport cartEmptyImage from '../assets/img/empty-cart.png'\n\nfunction Cart() {\n    const dispatch = useDispatch();\n    const { totalPrice, totalCount, items, showClearPopup, showDeletePopup, idForDelete } = useSelector(({ cart }) => cart);\n\n    const onClearShowPopup = () => {\n        dispatch(setShowClearPopup(!showClearPopup))\n    }\n    const onDeleteShowPopup = () => {\n        dispatch(setShowDeletePopup(!showDeletePopup))\n    }\n    const onSetIdForDelete = (obj) => {\n        dispatch(setIdForDelete(obj))\n    }\n\n    const onRemovePizzaFromCart = () => {\n        dispatch(removePizzaFromCart(idForDelete))\n    }\n\n\n\n    const className = showClearPopup || showDeletePopup ? \"popup active\" : \"popup\";\n\n    return (\n        <div className=\"container container--cart\">\n            {totalCount\n                ? <div className=\"cart\">\n                    <div className=\"cart__top\">\n                        <h2 className=\"content__title\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            </svg>\n                        Корзина\n                    </h2>\n                        <div className=\"cart__clear\">\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            </svg>\n\n                            <span onClick={onClearShowPopup}>Очистить корзину</span>\n                        </div>\n                    </div>\n                    <div className=\"content__items\">\n                        {items.map((item) => <CartItem\n                            key={item.dataForKey}\n                            {...item}\n                            onDeleteShowPopup={onDeleteShowPopup}\n                            onSetIdForDelete={onSetIdForDelete} />)}\n                    </div>\n                    <div className=\"cart__bottom\">\n                        <div className=\"cart__bottom-details\">\n                            <span> Всего пицц: <b>{totalCount} шт.</b> </span>\n                            <span> Сумма заказа: <b>{totalPrice}<svg className=\"ruble-svg\"><use xlinkHref=\"#ruble\" /></svg></b> </span>\n                        </div>\n                        <div className=\"cart__bottom-buttons\">\n                            <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\n                                <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                </svg>\n\n                                <span>Вернуться назад</span>\n                            </Link>\n                            <div className=\"button pay-btn\">\n                                <span>Оплатить сейчас</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                : (\n                    <div className=\"cart cart--empty\">\n                        <h2>\n                            Корзина пустая\n                        </h2>\n                        <p>\n                            Вероятней всего, вы не заказывали ещё пиццу.\n                            <br />\n                            Для того, чтобы заказать пиццу, перейди на главную страницу.\n                        </p>\n                        <img src={cartEmptyImage} alt=\"Empty cart\" />\n                        <Link to=\"/\" className=\"button button--black\">\n                            <span>Вернуться назад</span>\n                        </Link>\n                    </div>\n                )}\n            <div className={className}>\n                {showClearPopup\n                    && <ClearPopup\n                        clearCart={clearCart}\n                        onClearShowPopup={onClearShowPopup} />}\n                {showDeletePopup\n                    && <RemovePopup\n                        onRemovePizzaFromCart={onRemovePizzaFromCart}\n                        onDeleteShowPopup={onDeleteShowPopup} />}\n            </div>\n        </div >\n    )\n}\n\nexport default Cart\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Header } from './components';\nimport { Home, Cart } from './pages';\n\nfunction App() {\n\n    // ТЕСТ ДЛЯ РЕРЕНДЕРА\n    // window.test = () => {\n    //     fetch(\"http://localhost:3004/pizzas\")\n    //         .then((resp) => {\n    //             if (!resp.ok) {\n    //                 throw new Error(`Could not fetch ${\"http://localhost:3004/pizzas\"}` +\n    //                     `, received ${resp.status}`);\n    //             }\n    //             return resp.json();\n    //         })\n    //         .then((data) => {\n    //             dispatch(setPizzas(data));\n    //         })\n    // }\n\n    return (\n        <div className=\"outside\">\n            <svg display=\"none\">\n                <symbol id=\"ruble\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                    <path fill=\"\" d=\"M291.75,308.1a105.8,105.8,0,1,0,0-211.6H136v32h39.943V276.1H136v32h39.943V352H136v32h39.943v56h32V384H304V352H207.943V308.1ZM207.943,128.5H291.75a73.8,73.8,0,1,1,0,147.6H207.943Z\" className=\"ci-primary\" />\n                </symbol>\n            </svg>\n            <div\n                className=\"wrapper\">\n                <Header />\n                <div className=\"content\">\n                    <Route exact path=\"/react-pizza/\" component={Home} />\n                    <Route exact path=\"/react-pizza/cart\" component={Cart} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\nimport './scss/app.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}